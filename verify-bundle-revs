#!/usr/bin/env python3

import os
import yaml
from subprocess import check_output
from urllib.request import Request, urlopen

channel = os.environ.get('CHANNEL', 'stable')

bundles = [
  'charmed-kubernetes',
  'canonical-kubernetes',
  'kubernetes-core',
  'canonical-kubernetes-canal',
  'kubernetes-calico',
  'kubernetes-tigera-secure-ee'
]

mismatches = []

for bundle in bundles:
  print(bundle)
  print('  Getting bundle')
  url = 'https://api.jujucharms.com/v5/~containers/%s/archive/bundle.yaml?channel=%s' % (
    bundle, channel
  )
  request = Request(url)
  request.add_header('Cache-Control', 'max-age=0')
  with urlopen(request) as f:
    data = yaml.safe_load(f)
  print('  Checking apps')
  apps = data['applications']
  for app_name, app in apps.items():
    charm = app['charm']
    charm_base = charm.rpartition('-')[0]
    charm_rev = int(charm.rpartition('-')[2])
    output = check_output(['charm', 'show', charm_base, '--channel', channel, '--format', 'yaml'])
    charm_store_data = yaml.safe_load(output)
    charm_store_rev = charm_store_data['id-revision']['Revision']
    if charm_rev == charm_store_rev:
      print('    %s OK: %s, store rev %d' % (app_name, charm, charm_store_rev))
    else:
      print('    %s FAIL: %s, store rev %d' % (app_name, charm, charm_store_rev))
      mismatches.append((bundle, app_name, charm, charm_store_rev))

print('---------------- %s mismatches ----------------' % len(mismatches))
for mismatch in mismatches:
  print('%s/%s: bundle rev %s, store rev %s' % mismatch)
